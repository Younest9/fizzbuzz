name: CI

on:
  push:
    # All branches
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  run:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io docker-compose
        sudo chmod 666 /var/run/docker.sock

    - name: Start Docker Compose
      run: docker-compose up -d --build -V --quiet-pull
    
    - name: Check if the application is running
      run: |
        #!/bin/bash
        set -e
        # Check if the test application is running, if it doesn't, exit the github actions with an error
        if ! [ "$(docker-compose ps -q test)" ]; then
          echo "Application is not running"
          exit 1
        fi
    - name: Wait for the application to start
      run: |
        sleep 20
        docker ps -a
        ls -al
        pwd
        cd test
        ls -al
    
    
    - name: Run tests
      run: |
        #!/bin/bash
        set -e
        # Check if screenshots exists and it's not empty, and it has 3 subdirectories (moblie, tablet, desktop) in the test container, if it doesn't, exit the github actions with an error
        if ! [ "$(ls -A test/screenshots)" ] || ! [ "$(ls -A test/screenshots/mobile)" ] || ! [ "$(ls -A test/screenshots/tablet)" ] || ! [ "$(ls -A test/screenshots/desktop)" ]; then
          echo "Screenshots are not generated"
          exit 1
        fi
        # Check if the test results exists and it's not empty in the test container, if it doesn't, exit the github actions with an error
        if ! [ "$(ls -A test/documentation.md)" ]; then
          echo "Test results are not generated"
          exit 1
        fi

    - name: Stop Docker Compose
      run: docker-compose down
    
    # the test results are in the test container, so we need to copy them to the host machine first
    - name: Copy test results to host machine
      run: docker cp test:/app/test/documentation.md .
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: documentation.md
    